<UserControl x:Class="WoWAHDataProject.GUI.MainWindowGUI.Controls.MainWindowMenuControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WoWAHDataProject.GUI.MainWindowGUI.Controls"
             mc:Ignorable="d">
             <!--d:DesignHeight="450" 
             d:DesignWidth="800">-->
    

    
    <UserControl.Resources>

        <Style x:Key="MenuTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            
            <!--to change fore ground on MouseOver and Menu Item Selection-->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="#515EC1"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="#515EC1"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Foreground" Value="#515EC1"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Foreground" Value="#515EC1"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="BorderBrush" Value="#181a1c"/>
            <Setter Property="Background" Value="#FFA500"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                           <!--Adding in our Button--> 
                            <Grid Margin="5,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!--#region Menu Icon-->
                                <Grid Width="30">
                                    
                                    <!--#region Optional Hide/Show Menu Icon-->
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasIcon, ElementName=this, TargetNullValue=False, FallbackValue=False}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                        <!--#endregion-->

                                </Grid>
                                <!--#endregion-->
                                
                                <!--Menu Text-->
                                <TextBlock Style="{StaticResource MenuTextStyle}" Grid.Column="1" Text="{TemplateBinding Content}"/>
                                
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--setting default selection to dashboard button on Application startup-->
                            <Trigger Property="Content" Value="Dashboard">
                                <Setter Property="IsChecked" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--#region Customizing Listbox & ListboxItems-->
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#EE9A00"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SelectedIndex" Value="0"/>
            <Style.Triggers>
                <!--To Hide SubMenu List When the Parent Menu button is Unchecked-->
                <DataTrigger Binding="{Binding IsChecked, ElementName=Menu}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                
                <!--And also to hide when the SubMenu List coming from our ViewModel is null-->
                <DataTrigger Binding="{Binding SubMenuList}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="#181a1c"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        

                            <!--You might be thinking why we are using RadioButton instead of Normal Button here... Well, there are 2 reasons for that
                    1) Radio Buttons have GroupName property which will help us achieve one selection of button at a time.. i will show you later what 
                    i mean by that...
                    2) Radio buttons have IsChecked property which we can use to benefit for collapsing / showing our SubMenus
                            
                            ;)
                    -->
                            <RadioButton
                                x:Name="SMenuButton"
                                GroupName="SubMenu"
                                Style="{StaticResource MenuButtonStyle}"
                                Background="#EE9A00"
                                Content="{Binding SubMenuText, FallbackValue=MenuText, TargetNullValue=MenuText}"
                                Command="{Binding SubMenuCommand}"/>
                        
                        <ControlTemplate.Triggers>
                            <!--To select ListboxItem when our button is in Checked State-->
                            <DataTrigger Binding="{Binding IsChecked, ElementName=SMenuButton}" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
    </UserControl.Resources>
    <ItemsControl ItemsSource="{Binding MenuList}"
        ScrollViewer.VerticalScrollBarVisibility="Disabled"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <StackPanel>
                    <!--Main Menu Button-->
                    <!--You might be thinking why we are using RadioButton instead of Normal Button here... Well, there are 2 reasons for that
                    1) Radio Buttons have GroupName property which will help us achieve one selection of button at a time.. i will show you later what 
                    i mean by that...
                    2) Radio buttons have IsChecked property which we can use to benefit for collapsing / showing our SubMenus
                    --> 
                    <RadioButton x:Name="Menu"
                                 Content="{Binding MenuText}"
                                 GroupName="MainMenu"
                                 Style="{StaticResource MenuButtonStyle}"
                                 Command="{Binding Command}"/>
                    
                    <!--Sub Menu Listbox-->
                    <ListBox
                        ItemsSource="{Binding SubMenuList}"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"                       
                        />
                    
                    <!--We are not getting the SubMenu Text becuase we didnt bind SubMenuText property to our ListboxItem content yet-->
                </StackPanel>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</UserControl>
